<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language [
    <!ENTITY bin_int "(?:[01]+(?:_[01]+)*)">
    <!ENTITY oct_int "(?:[0-7]+(?:_[0-7]+)*)">
    <!ENTITY dec_int "(?:[0-9]+(?:_[0-9]+)*)">
    <!ENTITY hex_int "(?:[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*)">
    <!ENTITY exp_float "(?:[eE][+-]?&dec_int;)">
    <!ENTITY exp_hexfloat "(?:[pP][-+]?&dec_int;)">
]>
<language name="Gleam" section="Sources" version="2" kateversion="5.62" indenter="cstyle" extensions="*.gleam" mimetype="text/x-gleam" priority="1">
    <highlighting>
        <list name="keywords">
            <item>as</item>
            <item>assert</item>
            <item>const</item>
            <item>fn</item>
            <item>import</item>
            <item>let</item>
            <item>opaque</item>
            <item>panic</item>
            <item>pub</item>
            <item>todo</item>
            <item>type</item>
            <item>use</item>
        </list>
        <list name="controlflow">
            <item>case</item>
            <item>try</item>
            <item>if</item>
            <item>else</item>
        </list>
        <list name="types">
            <item>Bool</item>
            <item>Int</item>
            <item>Float</item>
            <item>String</item>
            <item>Result</item>
            <item>List</item>
            <item>Nil</item>
            <item>Ok</item>
            <item>Err</item>
        </list>
        <list name="modifiers">
            <item>opaque</item>
            <item>pub</item>
        </list>
        <list name="literals">
            <item>False</item>
            <item>True</item>
            <item>Nil</item>
        </list>
        <list name="builtin_functions">
        </list>
        <contexts>
            <context attribute="Normal Text" lineEndContext="#stay" name="Normal">
                <DetectSpaces/>
                <Detect2Chars char="/" char1="/" attribute="Comment" context="Comment"/>
                <AnyChar attribute="Symbol" context="#stay" String=":!%&amp;+,-/.*&lt;=&gt;?|~^"/>
                <AnyChar context="Number" String="0123456789" lookAhead="1"/>
                <DetectChar attribute="String" context="DoubleQuoteString" char="&quot;"/>
                <Detect2Chars char="\" char1="\" attribute="String" context="Multiline String"/>
                <keyword String="keywords" attribute="Keyword" context="#stay"/>
                <keyword String="types" attribute="Type" context="#stay"/>
                <keyword attribute="Constant" context="#stay" String="literals"/>
                <keyword attribute="Builtin Functions" context="#stay" String="builtin_functions"/>
                <keyword attribute="Control Flow" context="#stay" String="controlflow"/>
                <keyword attribute="Modifiers" context="#stay" String="modifiers"/>
                <WordDetect attribute="Self Variable" String="self"/>
                <DetectIdentifier/>
            </context>
            <!-- Strings -->
            <context attribute="String" lineEndContext="#pop" name="DoubleQuoteString">
                <DetectChar context="EscapeChar" char="\" lookAhead="1"/>
                <DetectChar attribute="String" context="#pop" char="&quot;"/>
            </context>
            <context attribute="Character" lineEndContext="#pop" name="SingleQuoteString">
                <DetectChar context="EscapeChar" char="\" lookAhead="1"/>
                <DetectChar attribute="Character" context="#pop" char="'"/>
            </context>
            <context attribute="String" lineEndContext="#pop" name="Multiline String"/>
            <context attribute="String Char" lineEndContext="#pop" name="EscapeChar">
                <RegExpr attribute="String Char" context="#pop" String="\\([nrt'&quot;\\]|x[0-9a-fA-F]{2}|u\{[0-9a-fA-F]+\})"/>
                <RegExpr attribute="Error" context="#pop" String="\\(x[0-9a-fA-F]?|u\{[0-9a-fA-F]{0,8}\}?)?"/>
            </context>
            <!-- Comment -->
            <context attribute="Comment" lineEndContext="#pop" name="Comment">
                <DetectSpaces attribute="Comment"/>
                <IncludeRules context="##Comments"/>
                <DetectIdentifier attribute="Comment"/>
            </context>
            <!-- Integer / Float -->
            <context name="Number" attribute="Normal Text" lineEndContext="#pop">
                <RegExpr attribute="Float" context="#pop!SuffixNumber" String="&dec_int;(\.&dec_int;&exp_float;?|&exp_float;)"/>
                <RegExpr attribute="Decimal" context="#pop!SuffixNumber" String="0(?=[^xob]|$)|(?=0[xob])|&dec_int;"/>
                <RegExpr attribute="Hex Float" context="#pop!SuffixNumber" String="0x&hex_int;(\.&hex_int;&exp_hexfloat;?|&exp_hexfloat;)"/>
                <RegExpr attribute="Hex" context="#pop!SuffixNumber" String="0x&hex_int;"/>
                <RegExpr attribute="Octal" context="#pop!SuffixNumber" String="0o&oct_int;"/>
                <RegExpr attribute="Binary" context="#pop!SuffixNumber" String="0b&bin_int;"/>
                <DetectChar attribute="Decimal" context="#pop!SuffixNumber" char="0"/>
            </context>
            <context name="SuffixNumber" attribute="Normal Text" lineEndContext="#pop" fallthroughContext="#pop">
                <AnyChar attribute="Error" String=".0123456789" context="#pop"/>
                <DetectIdentifier attribute="Error" context="#pop"/>
            </context>
            <!-- Integer type -->
            <!-- i or u followed by digits. The maximum allowed bit-width of an integer type is 65535 -->
            <!--<context name="SpecialType" attribute="Normal Text" lineEndContext="#pop">
                <RegExpr attribute="Type" context="#pop" String="\b[ui]([0-9]{1,4}|[1-5][0-9]{4}|6([0-4][0-9]{3}|5([0-4][0-9]{2}|5([0-2][0-9]|3[0-5]))))\b"/>
                <DetectIdentifier attribute="Normal Text" context="#pop"/>
            </context>-->
        </contexts>
        <itemDatas>
            <itemData name="Normal Text" defStyleNum="dsNormal"/>
            <itemData name="Self Variable" defStyleNum="dsVariable" spellChecking="false"/>
            <itemData name="Keyword" defStyleNum="dsKeyword" spellChecking="false"/>
            <itemData name="Type" defStyleNum="dsDataType" spellChecking="false"/>
            <itemData name="Builtin Functions" defStyleNum="dsBuiltIn" spellChecking="false"/>
            <itemData name="Constant" defStyleNum="dsConstant" spellChecking="false"/>
            <itemData name="Control Flow" defStyleNum="dsControlFlow" spellChecking="false"/>
            <itemData name="Modifiers" defStyleNum="dsAttribute" spellChecking="false"/>
            <itemData name="Comment" defStyleNum="dsComment" spellChecking="true"/>
            <itemData name="Binary" defStyleNum="dsBaseN" spellChecking="false"/>
            <itemData name="Octal" defStyleNum="dsBaseN" spellChecking="false"/>
            <itemData name="Hex" defStyleNum="dsBaseN" spellChecking="false"/>
            <itemData name="Decimal" defStyleNum="dsDecVal" spellChecking="false"/>
            <itemData name="Float" defStyleNum="dsFloat" spellChecking="false"/>
            <itemData name="Hex Float" defStyleNum="dsFloat" spellChecking="false"/>
            <itemData name="String" defStyleNum="dsString"/>
            <itemData name="String Char" defStyleNum="dsSpecialChar"/>
            <itemData name="Character" defStyleNum="dsChar" spellChecking="false"/>
            <itemData name="Symbol" defStyleNum="dsOperator" spellChecking="false"/>
            <itemData name="Error" defStyleNum="dsError" spellChecking="false"/>
        </itemDatas>
    </highlighting>
    <general>
        <comments>
            <comment name="singleLine" start="//"/>
        </comments>
        <keywords casesensitive="true"/>
    </general>
</language>
<!-- kate: replace-tabs on; tab-width 4; indent-width 4; -->
